{"version":3,"sources":["rtop.videoPlayer.mjs","src/js/config/defaults.js","src/js/config/config.js","src/js/helpers/vimeo.js","src/js/helpers/youtube.js","src/js/helpers/createDivs.js","src/js/helpers/utils.js","src/js/helpers/video.js","src/js/helpers/GTM.js","src/js/player/controls.js","src/js/player/player.js","src/js/helpers/objects.js","src/js/helpers/events.js","src/js/rtop.videoPlayer.js"],"names":["_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","prototype","_defineProperty","obj","value","_slicedToArray","arr","_arrayWithHoles","_iterableToArrayLimit","_nonIterableRest","Array","isArray","_arr","_n","_d","_e","undefined","_s","_i","Symbol","iterator","next","done","push","err","defaults","src","poster","type","showControls","showControlsOnHover","controlsHoverSensitivity","showScrubber","showTimer","showPlayPauseBtn","showSoundControl","showFullScreen","keyboardControls","themeClass","fontAwesomeControlIcons","autoPlay","loop","allowReplay","playInModal","showCloseBtn","closeModalOnFinish","gtmOptions","config","version","updated","vimeo","isVimeo","url","test","youtube","isYoutube","wrap","elements","wrapper","targets","from","reverse","forEach","element","index","child","cloneNode","parent","parentNode","sibling","nextSibling","appendChild","insertBefore","createElement","attr","text","document","setAttributes","innerText","keys","entries","_ref","_ref2","setAttribute","prepend","children","remove","removeChild","addClass","className","classList","add","contains","removeClass","hasClass","html","innerHTML","generateRandomId","Math","random","toString","substr","timeFormat","s","floor","map","v","join","runPrefixMethod","method","m","t","pfx","p","toLowerCase","_typeof","video","init","videoTag","this","_element","querySelector","_randomId","_video","player","getAttribute","_id","createTag","_settings","external","loadVimeo","loadYoutube","call","console","log","sourceTag","playsinline","id","append","checkTaging","tag","dataLayer","event","sendTag","controls","pause","play","playPauseRepeat","_playerWrapper","restart","videoMove","_timers","_motion_timer","clearTimeout","videoOut","_this","paused","setTimeout","progressClick","stopPropagation","pos","pageX","_controls","progressholder","offsetLeft","maxPos","offsetWidth","duration","progressMove","orb","orbPos","style","left","mute","isMute","adjustVolume","volume","bar","fullscreen","isFs","close","updateProgress","_this2","time","current","currentTime","total","buffered","width","end","progress","_player","parseFloat","name","ended","videoEnded","_this3","muted","autoplay","load","openModal","_modal","keyCode","preventDefault","_progress","clearInterval","$that","stop","buildWrapper","parentWrapper","class","videoHolder","buildModal","modal","holder","body","posterImage","modalPoster","events","click","addEventListener","playerControls","buildFontAwesomeButton","closeModal","buildControls","vidControls","mousemove","mouseout","keyboard","buildPlayBtn","pp","videoControls","buildProgressBar","spacer","buildTimer","buildSoundControl","buildFullScreen","buildPauseBtn","info","_this4","_this5","fullWidth","buffer","progressorb","totaltime","_this6","bars","fill","_","data-value","buildSoundBtn","_this7","icon","btnIcon","buildMuteBtn","_this8","_this9","fs","$id","$icon","btn","getConstructor","input","constructor","clone","object","JSON","parse","stringify","extend","arguments","_len","sources","_key","source","shift","includes","assign","apply","concat","listener","callback","bool","split","_eventListeners","bubbles","on","off","unbindAll","item","options","removeEventListener","VideoPlayer","_name","_version","_updated","settings","_original","setInterval","sec","val","vol","Number","_elements"],"mappings":"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","file":"rtop.videoPlayer.min.mjs","sourcesContent":["typeof navigator === \"object\" && function _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function (obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function (obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}\n\n// RTOP Video Player Default options\nvar defaults = {\n  // override source\n  src: '',\n  // override poster\n  poster: '',\n  // override source type\n  type: '',\n  // display controls\n  showControls: true,\n  // display controls on player hover\n  showControlsOnHover: true,\n  // ms for hiding controls after non movement\n  controlsHoverSensitivity: 3000,\n  // display progress scrubber bar\n  showScrubber: true,\n  // display timer\n  showTimer: false,\n  // display play/pause timer\n  showPlayPauseBtn: true,\n  // display sound/mute controls\n  showSoundControl: false,\n  // display full screen button\n  showFullScreen: false,\n  // allow space bar to play/pause video\n  keyboardControls: true,\n  // add class to help theme\n  themeClass: 'rtopTheme',\n  // use font awesome icons\n  fontAwesomeControlIcons: true,\n  // auto play video\n  autoPlay: false,\n  // loop video on finish\n  loop: false,\n  // allow replay video\n  allowReplay: true,\n  // play in modal\n  playInModal: false,\n  // display a close button on modal\n  showCloseBtn: false,\n  // close the modal when video ends\n  closeModalOnFinish: false,\n  // all the GTM options\n  gtmOptions: {}\n};\n\n// RTOP Video Player Config options\nvar config = {\n  version: '1.1.0',\n  updated: '05.15.19'\n};\n\n// all things vimeo\nvar vimeo = {\n  isVimeo: function isVimeo(url) {\n    return /^https?:\\/\\/vimeo.com\\/\\d{0,9}(?=\\b|\\/)/.test(url);\n  }\n};\n\n// all things youtube\nvar youtube = {\n  isYoutube: function isYoutube(url) {\n    return /^(https?:\\/\\/)?(www\\.)?(youtube\\.com|youtube-nocookie\\.com|youtu\\.?be)\\/.+$/.test(url);\n  }\n};\n\n// all our jquery functions in pure javascript\n// wrap\nfunction wrap(elements, wrapper) {\n  var targets = elements.length ? elements : [elements];\n  Array.from(targets).reverse().forEach(function (element, index) {\n    var child = index > 0 ? wrapper.cloneNode(true) : wrapper;\n    var parent = element.parentNode;\n    var sibling = element.nextSibling;\n    child.appendChild(element);\n\n    if (sibling) {\n      parent.insertBefore(child, sibling);\n    } else {\n      parent.appendChild(child);\n    }\n  });\n} // create new element (divs, spans, etc)\n\nfunction createElement(type, attr, text) {\n  var element = document.createElement(type);\n  setAttributes(element, attr);\n\n  if (text && text !== '') {\n    element.innerText = text;\n  }\n\n  return element;\n} // add attrs to div\n\nfunction setAttributes(element, attr) {\n  if (!attr || Object.keys(attr).length === 0) {\n    return;\n  }\n\n  Object.entries(attr).forEach(function (_ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n        key = _ref2[0],\n        value = _ref2[1];\n\n    return element.setAttribute(key, value);\n  });\n} // add element after\n\nfunction prepend(parent, element) {\n  parent.insertBefore(element, parent.children[0]);\n} // remove element\n\nfunction remove(element) {\n  if (element && element.parentNode) {\n    element.parentNode.removeChild(element);\n  }\n} // add class\n\nfunction addClass(element, className) {\n  element.classList.add(className);\n  return element.classList.contains(className);\n} // remove class\n\nfunction removeClass(element, className) {\n  element.classList.remove(className);\n  return element.classList.contains(className);\n} // if element has class\n\nfunction hasClass(element, className) {\n  return element.classList.contains(className);\n} // add html\n\nfunction html(element, html) {\n  element.innerHTML = html;\n} // replace element\n\n// useful utility functions\n// get a random id if needed\nfunction generateRandomId() {\n  return Math.random().toString(36).substr(2, 12);\n} // format time into seconds\n\nfunction timeFormat(s) {\n  var fm = [Math.floor(s / 60) % 60, Math.floor(s % 60)];\n  return fm.map(function (v, i) {\n    return (v < 10 ? '0' : '') + v;\n  }).join(':');\n} // browser specific\n\nfunction runPrefixMethod(obj, method) {\n  var pfx = [\"webkit\", \"moz\", \"ms\", \"o\", \"\"];\n  var p = 0,\n      m,\n      t;\n\n  while (p < pfx.length && !obj[m]) {\n    m = method;\n\n    if (pfx[p] == \"\") {\n      m = m.substr(0, 1).toLowerCase() + m.substr(1);\n    }\n\n    m = pfx[p] + m;\n    t = _typeof(obj[m]);\n\n    if (t != \"undefined\") {\n      pfx = [pfx[p]];\n      return t == \"function\" ? obj[m]() : obj[m];\n    }\n\n    p++;\n  }\n}\n\n// all this video tag related\nvar video = {\n  // Setup media\n  init: function init() {\n    var videoTag = this._element.querySelector(\"video\");\n\n    this._randomId = generateRandomId(); // if the video tag is already present\n\n    if (videoTag) {\n      this._video.player = videoTag;\n      this._video.src = videoTag.getAttribute('src');\n      this._video.poster = videoTag.getAttribute('poster');\n      this._video.type = videoTag.getAttribute('type');\n\n      if (!videoTag.getAttribute('id')) {\n        setAttributes(videoTag, _id);\n      }\n    } // if there is a video data attr\n\n\n    if (this._element.getAttribute('data-video')) {\n      this._video.src = this._element.getAttribute('data-video');\n      this._video.poster = this._element.getAttribute('data-poster');\n      this._video.type = this._element.getAttribute('data-type');\n      this._video.createTag = true;\n    }\n\n    if (this._settings.src !== '') {\n      // check if vimeo\n      this._video.isVimeo = vimeo.isVimeo(this._settings.src); // check if youtube\n\n      this._video.isYoutube = youtube.isYoutube(this._settings.src);\n\n      if (this._video.isVimeo || this._video.isYoutube) {\n        this._video.external = true;\n      } else {\n        this._video.createTag = true;\n      } // or if you specified the src/poster/type\n\n\n      this._video.src = this._settings.src;\n      this._video.poster = this._settings.poster;\n      this._video.type = this._settings.src.type;\n    } // if no source, stop and add error\n\n\n    if (!this._video.src) {\n      console.log('There was an error loading your video, please check documentation --> https://redtettemer.github.io/rtop-video-player/');\n      return;\n    } // if vimeo, load iframe\n\n\n    if (this._video.isVimeo) {\n      vimeo.loadVimeo();\n    } // if youtube, load iframe\n\n\n    if (this._video.isYoutube) {\n      youtube.loadYoutube();\n    } // if need to add <video>, build it\n\n\n    if (this._video.createTag) {\n      video.createTag.call(this);\n    }\n  },\n  // build the video tag if needed\n  createTag: function createTag() {\n    var sourceTag = createElement('source', {\n      src: this._video.src,\n      type: this._video.type\n    });\n    var videoTag = createElement('video', {\n      src: this._video.src,\n      poster: this._video.poster,\n      type: this._video.type,\n      playsinline: true,\n      id: this._randomId\n    });\n    videoTag.append(sourceTag);\n\n    this._element.append(videoTag);\n\n    this._video.player = videoTag;\n  }\n};\n\n// GTM stuff\nfunction checkTaging(tag) {\n  if ((typeof dataLayer === \"undefined\" ? \"undefined\" : _typeof(dataLayer)) !== undefined) {\n    for (var i in dataLayer) {\n      if (dataLayer[i].event === tag) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  return true;\n}\nfunction sendTag(type, tag) {\n  dataLayer.push({\n    type: tag\n  });\n}\n\n// all the click events\nvar controls = {\n  // pause\n  pause: function pause() {\n    this.pause();\n  },\n  // play\n  play: function play() {\n    this.play();\n  },\n  // play pause or repeat if you click the video depending on current state\n  playPauseRepeat: function playPauseRepeat() {\n    if (hasClass(this._playerWrapper, 'playing')) {\n      this.pause();\n    } else if (hasClass(this._playerWrapper, 'finished')) {\n      if (this._settings.allowReplay) {\n        this.restart();\n      }\n    } else {\n      this.play();\n    }\n  },\n  // if you are moving over the video, show controls\n  videoMove: function videoMove() {\n    if (this._settings.showControls) {\n      if (hasClass(this._playerWrapper, 'hideOverlay')) {\n        if (this._timers && this._timers._motion_timer) {\n          clearTimeout(this._timers._motion_timer);\n        }\n\n        removeClass(this._playerWrapper, 'hideOverlay');\n        removeClass(this._playerWrapper.querySelector(\".vidControls\"), 'hide');\n      }\n    }\n  },\n  // if you scroll out of the video, hide controls\n  videoOut: function videoOut() {\n    var _this = this;\n\n    if (!this._video.player.paused && this._settings.showControls) {\n      if (this._timers && this._timers._motion_timer) {\n        clearTimeout(this._timers._motion_timer);\n      }\n\n      if (!this._timers) {\n        this._timers = {};\n      }\n\n      this._timers._motion_timer = setTimeout(function () {\n        addClass(_this._playerWrapper, 'hideOverlay');\n        addClass(_this._playerWrapper.querySelector(\".vidControls\"), 'hide');\n      }, this._settings.controlsHoverSensitivity);\n    }\n  },\n  // seek\n  progressClick: function progressClick(event) {\n    event.stopPropagation();\n    var pos = event.pageX - this._controls.progressholder.element.offsetLeft - this._playerWrapper.parentNode.parentNode.offsetLeft;\n    var maxPos = this._controls.progressholder.element.offsetWidth;\n\n    if (!this._video.player) {\n      return;\n    }\n\n    this[\"goto\"](pos / maxPos * this._video.player.duration);\n  },\n  // move orb with cursor\n  progressMove: function progressMove(event) {\n    var orb = this._playerWrapper.querySelector(\"#progressorb\");\n\n    var pos = event.pageX - this._controls.progressholder.element.offsetLeft - this._playerWrapper.parentNode.parentNode.offsetLeft;\n    var orbPos = pos - orb.offsetWidth / 2;\n    var maxPos = this._controls.progressholder.element.offsetWidth - orb.offsetWidth / 2;\n    orb.style.left = orbPos > maxPos ? maxPos : orbPos + \"px\";\n  },\n  // mute\n  mute: function mute() {\n    if (this._controls.isMute) {\n      this.adjustVolume(this._controls.volume);\n    } else {\n      this.mute();\n    }\n  },\n  // adjust volume\n  adjustVolume: function adjustVolume(bar) {\n    this.adjustVolume(bar.getAttribute('data-value'));\n  },\n  // toggle fullscreen\n  fullscreen: function fullscreen() {\n    if (!this._controls.isFs) {\n      this._controls.isFs = true;\n      runPrefixMethod(this._playerWrapper, \"RequestFullScreen\");\n    } else {\n      this._controls.isFs = false;\n      runPrefixMethod(document, \"CancelFullScreen\");\n    }\n  },\n  // close modal\n  close: function close() {\n    this.close();\n  },\n  // update the scrubber/progress bar to current time\n  updateProgress: function updateProgress() {\n    var _this2 = this;\n\n    if (!this._video.player) {\n      return;\n    }\n\n    if (this._settings.showTimer) {\n      html(this._controls.time.current.element, timeFormat(this._video.player.currentTime));\n      html(this._controls.time.total.element, timeFormat(this._video.player.duration));\n    }\n\n    if (this._settings.showScrubber) {\n      this._controls.buffered.element.style.width = this._video.player.buffered.end(this._video.player.buffered.length - 1) / this._video.player.duration * 100 + \"%\";\n      this._controls.progress.element.style.width = this._video.player.currentTime / this._video.player.duration * 100 + \"%\";\n    } // if there are GTM events, try and dispatch based on time\n\n\n    if (Object.keys(this._settings.gtmOptions).length > 0) {\n      if (typeof dataLayer !== \"undefined\") {\n        Object.keys(this._settings.gtmOptions).map(function (i) {\n          if (Math.floor(_this2._video._player.currentTime / _this2._video._player.duration * 100) === parseFloat(_this2._settings.gtmOptions[i].time)) {\n            if (!checkTaging(_this2._settings.gtmOptions[i].name)) {\n              sendTag(_this2._settings.gtmOptions[i].type, name);\n            }\n          }\n        });\n      }\n    }\n\n    if (this._video.player.ended) {\n      controls.videoEnded.call(this);\n    }\n  },\n  // auto play\n  autoPlay: function autoPlay() {\n    var _this3 = this;\n\n    this._playerWrapper.addClass('playing'); // need to mute the video \n\n\n    this._video.player.muted = true; // mute the video fallback\n\n    this._video.player.volume = 0;\n    this._video.player.autoplay = true;\n\n    this._video.player.load();\n\n    if (this._settings.showControls) {\n      if (this._timers && this._timers._motion_timer) {\n        clearTimeout(this._timers._motion_timer);\n      }\n\n      if (!this._timers) {\n        this._timers = {};\n      }\n\n      this._timers._motion_timer = setTimeout(function () {\n        addClass(_this3._playerWrapper, 'hideOverlay');\n        addClass(_this3._playerWrapper.querySelector(\".vidControls\"), 'hide');\n      }, this._settings.controlsHoverSensitivity);\n    }\n  },\n  // open the modal\n  openModal: function openModal() {\n    addClass(this._modal, 'show');\n  },\n  // only keyboard control is spacebar for play/pause\n  keyboardControls: function keyboardControls(event) {\n    if (event.keyCode === 32) {\n      event.preventDefault();\n      event.stopPropagation();\n\n      if (hasClass(this._playerWrapper, 'playing')) {\n        this.pause();\n      } else if (hasClass(this._playerWrapper, 'finished')) {\n        if (this._settings.allowReplay) {\n          this.restart();\n        }\n      } else {\n        this.play();\n      }\n\n      return;\n    }\n  },\n  // what to do when video ends\n  videoEnded: function videoEnded() {\n    removeClass(this._playerWrapper, 'playing');\n    removeClass(this._playerWrapper, 'pause');\n    removeClass(this._playerWrapper, 'hideOverlay');\n    addClass(this._playerWrapper, this._settings.closeModalOnFinish ? 'closing' : 'finished');\n    addClass(this._playerWrapper.querySelector(\".vidControls\"), 'hide');\n\n    if (this._timers) {\n      if (this._timers._progress) {\n        clearInterval(this._timers._progress);\n      }\n\n      if (this._timers._motion_timer) {\n        clearTimeout(this._timers._motion_timer);\n      }\n    }\n\n    if (this._settings.loop) {\n      this.restart();\n    } else if (this._settings.closeModalOnFinish) {\n      var $that = this;\n      setTimeout(function () {\n        $that.stop();\n        removeClass($that._modal, 'show');\n      }, 300);\n    }\n  }\n};\n\n// build the player\nfunction buildWrapper() {\n  // add a parent wrapper\n  var parentWrapper = createElement('div', {\n    \"class\": 'rtopVideoPlayerWrapper'\n  }); // add a parent div that will hold everything\n\n  var videoHolder = createElement('div', {\n    \"class\": 'rtopVideoHolder' + (this._settings.fontAwesomeControlIcons ? ' hasFAIcons' : '')\n  }); // wrap the player with the holder\n\n  wrap(this._video.player, videoHolder); // create a player wrapper just for the player and append\n\n  this._playerWrapper = createElement('div', {\n    \"class\": 'rtopVideoPlayer ' + this._settings.themeClass + (this._settings.fontAwesomeControlIcons ? ' hasFA' : '')\n  });\n\n  this._playerWrapper.append(videoHolder);\n\n  parentWrapper.append(this._playerWrapper); // if we need a modal, build that\n\n  if (this._settings.playInModal) {\n    buildModal.call(this, parentWrapper);\n  } else {\n    // attach the parent divs\n    this._element.append(parentWrapper);\n  }\n}\nfunction buildModal(parentWrapper) {\n  var _this = this;\n\n  if (this._settings.playInModal) {\n    // add the modal wrapper\n    var modal = createElement('div', {\n      \"class\": 'rtopVideoModal',\n      id: this._randomId + '_modal'\n    }); // build the modal video holder\n\n    var holder = createElement('div', {\n      \"class\": 'videoModalHolder'\n    });\n    holder.append(parentWrapper);\n    modal.append(holder); // add it to the page\n\n    if (document.body) {\n      document.body.append(modal);\n    }\n\n    this._modal = modal; // create a poster image as a button to launch (if vimeo or youtube, will create that from their api when appropriate)\n\n    if (!this._video.isVimeo && !this._video.isYoutube) {\n      var _poster = createElement('div', {\n        \"class\": 'rtopVideoPosterImage' + (this._settings.fontAwesomeControlIcons ? ' hasFAIcons' : '')\n      });\n\n      var posterImage = createElement('img', {\n        src: this._video.poster\n      });\n\n      _poster.append(posterImage);\n    } // if controls arent ready yet, add them\n\n\n    if (!this._controls) {\n      this._controls = {};\n    } // add the poster image as a click event and store in the controls obj\n\n\n    this._controls = {\n      modalPoster: {\n        element: poster,\n        events: {\n          click: poster.addEventListener('click', function () {\n            return controls.openModal.call(_this);\n          }, true)\n        }\n      } // append poster\n\n    };\n\n    this._element.append(poster); // if close btn for modal, build that and add click event\n\n\n    if (this._settings.showCloseBtn) {\n      var close = buildFontAwesomeButton.call(this, 'closeVideo', 'far fa-times-circle');\n      holder.append(close);\n      this._controls.closeModal = {\n        element: close,\n        events: {\n          click: close.addEventListener('click', function () {\n            return controls.close.call(_this);\n          }, true)\n        }\n      };\n    }\n  }\n}\nfunction buildControls() {\n  var _this2 = this;\n\n  // add the controls wrapper\n  var vidControls = createElement('div', {\n    \"class\": 'vidControls' + (this._settings.fontAwesomeControlIcons ? ' hasFAIcons' : '')\n  });\n\n  this._playerWrapper.append(vidControls); // hold all the controls\n\n\n  if (!this._controls) {\n    this._controls = {};\n  } // add the video holder events (play/pause)\n\n\n  this._controls.video = {\n    element: this._playerWrapper.querySelector(\".rtopVideoHolder\"),\n    events: {\n      click: this._playerWrapper.querySelector(\".rtopVideoHolder\").addEventListener('click', function () {\n        return controls.playPauseRepeat.call(_this2);\n      }, true),\n      mousemove: this._playerWrapper.querySelector(\".rtopVideoHolder\").addEventListener('mousemove', function () {\n        return controls.videoMove.call(_this2);\n      }, true),\n      mouseout: this._playerWrapper.querySelector(\".rtopVideoHolder\").addEventListener('mouseout', function () {\n        return controls.videoOut.call(_this2);\n      }, true)\n    }\n  }; // if keyboard controls, add listener\n\n  if (this._settings.keyboardControls) {\n    this._controls.keyboard = {\n      events: document.addEventListener('keyup', function (event) {\n        return controls.keyboardControls.call(_this2, event);\n      }, true)\n    };\n  } // if showPlayPauseBtn, build\n\n\n  if (this._settings.showPlayPauseBtn) {\n    buildPlayBtn.call(this);\n  } else {\n    // build a spacer to keep alignment\n    addClass(vidControls, 'noPP');\n    var pp = createElement('div', {\n      className: 'controlBtn',\n      id: 'playPauseHolder'\n    });\n    videoControls.append(pp);\n  } // if scrubber, build\n\n\n  if (this._settings.showScrubber) {\n    buildProgressBar.call(this);\n  } else {\n    // build a spacer to keep alignment\n    addClass(vidControls, 'noProgressBar');\n    var spacer = createElement('div', {\n      className: 'controlBtn',\n      id: 'progressSpacer'\n    });\n    videoControls.append(spacer);\n  } // if timer, build\n\n\n  if (this._settings.showTimer) {\n    buildTimer.call(this);\n  } // if soundControl, build\n\n\n  if (this._settings.showSoundControl) {\n    buildSoundControl.call(this);\n  } // if fullscreen, build\n\n\n  if (this._settings.showFullScreen) {\n    buildFullScreen.call(this);\n  }\n\n  if (this._settings.autoPlay) {\n    controls.autoPlay.call(this);\n  }\n} // pause btn and event listener\n\nfunction buildPauseBtn() {\n  var _this3 = this;\n\n  var controls$1 = this._playerWrapper.querySelector(\".vidControls\");\n\n  addClass(controls$1, 'hasPP');\n  var pp = buildFontAwesomeButton.call(this, 'playPause', 'far fa-pause-circle');\n  prepend(controls$1, pp);\n  this._controls.pause = {\n    element: pp,\n    events: {\n      click: pp.addEventListener('click', function () {\n        return controls.pause.call(_this3);\n      }, true)\n    },\n    info: {\n      event: 'pause'\n    }\n  };\n} // play btn and event listener\n\nfunction buildPlayBtn() {\n  var _this4 = this;\n\n  var controls$1 = this._playerWrapper.querySelector(\".vidControls\");\n\n  addClass(controls$1, 'hasPP');\n  var pp = buildFontAwesomeButton.call(this, 'playPause', 'far fa-play-circle');\n  prepend(controls$1, pp);\n  this._controls.play = {\n    element: pp,\n    events: {\n      click: pp.addEventListener('click', function () {\n        return controls.play.call(_this4);\n      }, true)\n    },\n    info: {\n      event: 'play'\n    }\n  };\n} // progress bar/scrubber and event listeners\n\nfunction buildProgressBar() {\n  var _this5 = this;\n\n  var controls$1 = this._playerWrapper.querySelector(\".vidControls\");\n\n  addClass(controls$1, 'hasProgressBar');\n  var holder = createElement('div', {\n    \"class\": 'controlBtn',\n    id: 'progressholder'\n  });\n  this._controls.progressholder = {\n    element: holder,\n    events: {\n      click: holder.addEventListener('click', function (event) {\n        return controls.progressClick.call(_this5, event);\n      }, true),\n      mousemove: holder.addEventListener('mousemove', function (event) {\n        return controls.progressMove.call(_this5, event);\n      }, true)\n    }\n  };\n  var fullWidth = createElement('div', {\n    id: 'fullvideoprogress'\n  });\n  var buffer = createElement('div', {\n    id: 'buffered'\n  });\n  this._controls.buffered = {\n    element: buffer\n  };\n  var progress = createElement('div', {\n    id: 'progress'\n  });\n  this._controls.progress = {\n    element: progress\n  };\n  var orb = createElement('div', {\n    id: 'progressorb'\n  });\n  this._controls.progressorb = {\n    element: orb\n  };\n  holder.append(fullWidth);\n  holder.append(buffer);\n  holder.append(progress);\n  holder.append(orb);\n  controls$1.append(holder);\n} // timer btn and event listener\n\nfunction buildTimer() {\n  var controls = this._playerWrapper.querySelector(\".vidControls\");\n\n  addClass(controls, 'hasTimer');\n  var holder = createElement('div', {\n    \"class\": 'controlBtn',\n    id: 'timeholder'\n  });\n  var current = createElement('span', {\n    id: 'currenttime'\n  }, '00:00');\n  var spacer = createElement('span', {}, ' / ');\n  var total = createElement('span', {\n    id: 'totaltime'\n  }, '00:00');\n  holder.append(current);\n  holder.append(spacer);\n  holder.append(total);\n  controls.append(holder);\n  this._controls.time = {\n    current: {\n      element: current\n    },\n    total: {\n      element: totaltime\n    }\n  };\n} // sound controls and event listeners\n\nfunction buildSoundControl() {\n  var _this6 = this;\n\n  var controls$1 = this._playerWrapper.querySelector(\".vidControls\");\n\n  addClass(controls$1, 'hasSound');\n  var parent = createElement('div', {\n    \"class\": 'controlBtn',\n    id: 'soundControl'\n  });\n  var bars = createElement('span', {\n    \"class\": 'soundBars'\n  });\n  this._controls.volume = 1;\n  Array(4).fill().map(function (_, i) {\n    var bar = createElement('span', {\n      \"class\": \"soundBar active\",\n      \"data-value\": .25 * (i + 1)\n    });\n    bars.append(bar);\n    _this6._controls['soundBar' + i] = {\n      element: bar,\n      events: {\n        click: bar.addEventListener('click', function () {\n          return controls.adjustVolume.call(_this6, bar);\n        }, true)\n      }\n    };\n  });\n  parent.append(bars);\n  controls$1.append(parent);\n  buildSoundBtn.call(this);\n} // sound (unmute) btn and event listener\n\nfunction buildSoundBtn() {\n  var _this7 = this;\n\n  var icon = createElement('span', {\n    \"class\": 'muteBtn' + (this._settings.fontAwesomeControlIcons ? ' FAIcon' : ' localAsset')\n  });\n  var btnIcon = createElement('i', {\n    \"class\": 'fas fa-volume-up'\n  });\n\n  if (this._settings.fontAwesomeControlIcons) {\n    icon.append(btnIcon);\n  }\n\n  this._controls.mute = {\n    element: icon,\n    events: {\n      click: icon.addEventListener('click', function () {\n        return controls.mute.call(_this7);\n      }, true)\n    }\n  };\n  prepend(this._playerWrapper.querySelector(\"#soundControl\"), icon);\n} // mute btn and event listener\n\nfunction buildMuteBtn() {\n  var _this8 = this;\n\n  var icon = createElement('span', {\n    \"class\": 'muteBtn isMuted' + (this._settings.fontAwesomeControlIcons ? ' FAIcon' : ' localAsset')\n  });\n  var btnIcon = createElement('i', {\n    \"class\": 'fas fa-volume-mute'\n  });\n\n  if (this._settings.fontAwesomeControlIcons) {\n    icon.append(btnIcon);\n  }\n\n  this._controls.mute = {\n    element: icon,\n    events: {\n      click: icon.addEventListener('click', function () {\n        return controls.mute.call(_this8);\n      }, true)\n    }\n  };\n  prepend(this._playerWrapper.querySelector(\"#soundControl\"), icon);\n} // fullscreen btn and event listener\n\nfunction buildFullScreen() {\n  var _this9 = this;\n\n  var controls$1 = this._playerWrapper.querySelector(\".vidControls\");\n\n  addClass(controls$1, 'hasFS');\n  var fs = buildFontAwesomeButton.call(this, 'fullScreenBtn', 'fas fa-expand');\n  controls$1.append(fs);\n  this._controls.fullscreen = {\n    element: fs,\n    events: {\n      click: fs.addEventListener('click', function () {\n        return controls.fullscreen.call(_this9);\n      }, true)\n    }\n  };\n} // DRY for icon btns\n\nfunction buildFontAwesomeButton($id, $icon) {\n  var btn = createElement('div', {\n    \"class\": \"controlBtn\",\n    id: $id\n  });\n  var icon = createElement('span', {\n    \"class\": this._settings.fontAwesomeControlIcons ? 'FAIcon' : 'localAsset'\n  });\n  var btnIcon = createElement('i', {\n    \"class\": $icon\n  });\n\n  if (this._settings.fontAwesomeControlIcons) {\n    icon.append(btnIcon);\n  }\n\n  btn.append(icon);\n  return btn;\n}\n\n// pure javascript of jquery clone and extend\n// make sure it exists\nvar getConstructor = function getConstructor(input) {\n  return input !== null && typeof input !== 'undefined' ? input.constructor : null;\n}; // jquery clone \n\n\nfunction clone(object) {\n  return JSON.parse(JSON.stringify(object));\n} // jquery extend\n\nfunction extend() {\n  var target = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  for (var _len = arguments.length, sources = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    sources[_key - 1] = arguments[_key];\n  }\n\n  if (!sources.length) {\n    return target;\n  }\n\n  var source = sources.shift();\n\n  if (getConstructor(source) !== Object) {\n    return target;\n  }\n\n  Object.keys(source).forEach(function (key) {\n    if (getConstructor(source[key]) === Object) {\n      if (!Object.keys(target).includes(key)) {\n        Object.assign(target, _defineProperty({}, key, {}));\n      }\n\n      extend(target[key], source[key]);\n    } else {\n      Object.assign(target, _defineProperty({}, key, source[key]));\n    }\n  });\n  return extend.apply(void 0, [target].concat(sources));\n}\n\n// trigger a custom event to listen to \n\nfunction listener(element, event, callback, bool) {\n  var _this = this;\n\n  event.split(' ').forEach(function (type) {\n    if (_this._eventListeners && bool) {\n      _this._eventListeners.push({\n        element: element,\n        type: type,\n        callback: callback\n      });\n    }\n\n    element[bool ? 'addEventListener' : 'removeEventListener'](type, function () {\n      callback({\n        event: type\n      });\n    }, {\n      bubbles: true\n    });\n  });\n} // jquery on\n\nfunction on(element, events, callback) {\n  listener.call(this, element, events, callback, true);\n} // jquery off\n\nfunction off(element, events, callback) {\n  listener.call(this, element, events, callback, false);\n} // unbind everythind on destroy\n\nfunction unbindAll() {\n  if (this._eventListeners) {\n    this._eventListeners.forEach(function (item) {\n      var element = item.element,\n          type = item.type,\n          callback = item.callback,\n          options = item.options;\n      element.removeEventListener(type, callback, options);\n    });\n\n    this._eventListeners = [];\n  }\n}\n\nvar VideoPlayer =\n/*#__PURE__*/\nfunction () {\n  function VideoPlayer(target, options) {\n    _classCallCheck(this, VideoPlayer);\n\n    if (!target) {\n      // if no target, stop and send warning;\n      console.log('There was an error loading your video, please check documentation --> https://redtettemer.github.io/rtop-video-player/');\n      return;\n    } // keep hold of the target\n\n\n    this._element = document.querySelector(target); // some housekeeping\n\n    this._name = 'RTOP_VideoPlayer';\n    this._version = config.version;\n    this._updated = config.updated; // create the video object to hold all video info\n\n    this._video = {}; // create an event listener array to hold them\n\n    this._eventListeners = []; // extend settings with defaults\n\n    this._settings = extend({}, defaults, VideoPlayer.settings, options || {}); // Setup video\n\n    video.init.call(this); // build the wrapper everything in parent divs\n\n    buildWrapper.call(this); // build some controls\n\n    if (this._settings.showControls) {\n      buildControls.call(this);\n    } else if (!this._settings.showControls && this._settings.autoPlay) {\n      if (!this._video.isVimeo && !this._video.isYoutube) {\n        controls.autoPlay.call(this);\n      }\n    } // add class to remove play button and cursor\n\n\n    if (!this._settings.showControls) {\n      addClass(this._playerWrapper, 'noControls');\n    } // clone for destroy\n\n\n    this._original = this._element.cloneNode(true);\n  } // public functions to control the video\n\n\n  _createClass(VideoPlayer, [{\n    key: \"play\",\n    value: function play() {\n      var _this = this;\n\n      // if no video, return to avoid error\n      if (!this._video.player) {\n        return;\n      } // add playing class\n\n\n      addClass(this._playerWrapper, 'playing'); // remove paused class\n\n      removeClass(this._playerWrapper, 'paused'); // remove the play button\n\n      remove(this._controls.play.element); // build pause btn and add click events\n\n      buildPauseBtn.call(this); // update progress if needed\n\n      if (this._settings.showControls && (this._settings.showScrubber || this._settings.showTimer)) {\n        var $that = this; // if no timers exist, create obj to hold them\n\n        if (!this._timers) {\n          this._timers = {};\n        } // set interval to check progress\n\n\n        this._timers._progress = setInterval(function () {\n          controls.updateProgress.call($that);\n        }, 100);\n      } // if controls, start timer to hide\n\n\n      if (this._settings.showControls) {\n        // if motion timer, clear\n        if (this._timers && this._timers._motion_timer) {\n          clearTimeout(this._timers._motion_timer);\n        } // if no timers exist, create obj to hold them\n\n\n        if (!this._timers) {\n          this._timers = {};\n        } // create motion timer to hide the controls/overlay\n\n\n        this._timers._motion_timer = setTimeout(function () {\n          addClass(_this._playerWrapper, 'hideOverlay');\n          addClass(_this._playerWrapper.querySelector(\".vidControls\"), 'hide');\n        }, this._settings.controlsHoverSensitivity);\n      } // actually play the video\n\n\n      return this._video.player.play();\n    }\n  }, {\n    key: \"pause\",\n    value: function pause() {\n      // if no video, return to avoid error\n      if (!this._video.player) {\n        return;\n      } // add paused class\n\n\n      addClass(this._playerWrapper, 'paused'); // remove playing class\n\n      removeClass(this._playerWrapper, 'playing'); //remove the pause btn\n\n      remove(this._controls.pause.element); // add the play button and attach click events\n\n      buildPlayBtn.call(this); // pause the video\n\n      this._video.player.pause();\n    }\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      // if no video, return to avoid error\n      if (!this._video.player) {\n        return;\n      } // pause the video\n\n\n      this.pause(); //  if controls, stop the progress interval and clear the motion timers\n\n      if (this._settings.showControls) {\n        if (this._settings.showScrubber || this._settings.showTimer) {\n          clearInterval(this._timers._progress);\n        }\n\n        clearTimeout(this._timers._motion_timer); // hide the controls\n\n        removeClass(this._playerWrapper, 'finished');\n        removeClass(this._playerWrapper.querySelector(\".vidControls\"), 'hide');\n      } // reset the player to beginning\n\n\n      this._video.player.currentTime = 0;\n    }\n  }, {\n    key: \"restart\",\n    value: function restart() {\n      // if no video, return to avoid error\n      if (!this._video.player) {\n        return;\n      }\n\n      if (this._settings.showControls) {\n        // if pause button is up, remove it\n        if (this._settings.showPlayPauseBtn) {\n          remove(this._controls.pause.element);\n        } //  if controls, stop the progress interval and clear the motion timers\n\n\n        if (this._settings.showScrubber || this._settings.showTimer) {\n          clearInterval(this._timers._progress);\n        }\n\n        clearTimeout(this._timers._motion_timer); // hide the controls\n\n        removeClass(this._playerWrapper, 'finished');\n        removeClass(this._playerWrapper.querySelector(\".vidControls\"), 'hide');\n      } // reset the player to beginning\n\n\n      this._video.player.currentTime = 0; // play the video again\n\n      this.play();\n    }\n  }, {\n    key: \"goto\",\n    value: function goto(sec) {\n      // if no video, return to avoid error\n      if (!this._video.player) {\n        return;\n      } // seek video to requested time in seconds\n\n\n      this._video.player.currentTime = sec;\n    }\n  }, {\n    key: \"mute\",\n    value: function mute() {\n      var _this2 = this;\n\n      // if no video, return to avoid error\n      if (!this._video.player) {\n        return;\n      } // mute video\n\n\n      this._video.player.muted = true; // set our mute flag\n\n      this._controls.isMute = true; // remove the mute btn/icon\n\n      remove(this._controls.mute.element); // build muted btn/icon\n\n      buildMuteBtn.call(this); // remove the active class on all the sound bars\n\n      Array(4).fill().map(function (_, i) {\n        removeClass(_this2._controls['soundBar' + i].element, 'active');\n      });\n    }\n  }, {\n    key: \"adjustVolume\",\n    value: function adjustVolume(val) {\n      var _this3 = this;\n\n      // if no video, return to avoid error\n      if (!this._video.player) {\n        return;\n      } // check to make sure request volume great than or equal to 0 and less than or equal to 1\n\n\n      var vol = val ? val : 1;\n      var max = 1;\n      var min = 0;\n      vol = Number(vol);\n\n      if (vol > max) {\n        vol = max;\n      }\n\n      if (vol < min) {\n        vol = min;\n      } // if its muted, un mute as well\n\n\n      if (this._controls.isMute) {\n        this._video.player.muted = false;\n        this._controls.isMute = false; // remove the mute btn/icon\n\n        remove(this._controls.mute.element); // build the sound btn/icon\n\n        buildSoundBtn.call(this);\n      } // adjust the player volume\n\n\n      this._video.player.volume = vol; // add active class for all the bars under the requested volume threshold, remove those above\n\n      Array(4).fill().map(function (_, i) {\n        if (Number(_this3._controls['soundBar' + i].element.getAttribute('data-value')) <= vol) {\n          addClass(_this3._controls['soundBar' + i].element, 'active');\n        } else {\n          removeClass(_this3._controls['soundBar' + i].element, 'active');\n        }\n      }); // hold on to current volume\n\n      this._controls.volume = vol;\n    }\n  }, {\n    key: \"closeModal\",\n    value: function closeModal() {\n      // stop the video on close modal\n      this.stop(); // remove the class showing the modal\n\n      removeClass(this._modal, 'show');\n    }\n  }, {\n    key: \"on\",\n    value: function on$1(event, callback) {\n      // allow for jquery like on event listeners on the video player\n      on.call(this, this._video.player, event, callback);\n    }\n  }, {\n    key: \"off\",\n    value: function off$1(event, callback) {\n      // allow jquery like off event listener\n      off(this._elements, event, callback);\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      // if no video, return to avoid error\n      if (!this._video.player) {\n        return;\n      } // pause the video\n\n\n      this._video.player.pause(); // clear the timers\n\n\n      if (this._timers) {\n        if (this._settings.showControls && (this._settings.showScrubber || this._settings.showTimer)) {\n          clearInterval(this._timers._progress);\n        }\n\n        if (this._settings.showControls) {\n          clearTimeout(this._timers._motion_timer);\n        }\n      } // unbind all events\n\n\n      unbindAll.call(this); // remove the Video Player items\n\n      remove(document.querySelector('.rtopVideoPlayerWrapper')); // if the video tag was already there, add it back in\n\n      if (!this._video.createTag) {\n        video.createTag.call(this);\n      }\n    }\n  }]);\n\n  return VideoPlayer;\n}();\n\nVideoPlayer.settings = clone(defaults);\n// 5) add youtube\n// 6) SSR, maybe export the class then;\n\nexport default VideoPlayer;\n","// RTOP Video Player Default options\n\nconst defaults = {\n    // override source\n    src: '',\n\n    // override poster\n    poster: '',\n\n    // override source type\n    type: '',\n\n\t// display controls\n\tshowControls: true,\n\n\t// display controls on player hover\n    showControlsOnHover: true,\n\n    // ms for hiding controls after non movement\n    controlsHoverSensitivity: 3000,\n\n    // display progress scrubber bar\n    showScrubber: true,\n\n    // display timer\n    showTimer: false,\n\n    // display play/pause timer\n    showPlayPauseBtn: true,\n\n    // display sound/mute controls\n    showSoundControl: false,\n\n    // display full screen button\n    showFullScreen: false,\n\n    // allow space bar to play/pause video\n    keyboardControls: true,\n\n    // add class to help theme\n    themeClass: 'rtopTheme',\n\n    // use font awesome icons\n    fontAwesomeControlIcons: true,\n\n    // auto play video\n    autoPlay: false,\n\n    // loop video on finish\n    loop: false,\n\n    // allow replay video\n    allowReplay: true,\n\n    // play in modal\n    playInModal: false,\n\n    // display a close button on modal\n    showCloseBtn: false,\n\n    // close the modal when video ends\n    closeModalOnFinish: false,\n\n    // all the GTM options\n    gtmOptions: {}\n};\n\nexport default defaults;","// RTOP Video Player Config options\n\nconst config = {\n\tversion: '1.1.0',\n\tupdated: '05.15.19'\n}\n\nexport default config;\n","// all things vimeo\n\nconst vimeo = {\n\tisVimeo(url) {\n\t\treturn (/^https?:\\/\\/vimeo.com\\/\\d{0,9}(?=\\b|\\/)/.test(url));\n\t}\n}\n\nexport default vimeo;\n","// all things youtube\n\nconst youtube = {\n\tisYoutube(url) {\n\t\treturn (/^(https?:\\/\\/)?(www\\.)?(youtube\\.com|youtube-nocookie\\.com|youtu\\.?be)\\/.+$/.test(url));\n\t}\n}\n\nexport default youtube;\n","// all our jquery functions in pure javascript\n\n// wrap\nexport function wrap(elements, wrapper) {\n    const targets = elements.length ? elements : [elements];\n\n    Array.from(targets)\n        .reverse()\n        .forEach((element, index) => {\n            const child = index > 0 ? wrapper.cloneNode(true) : wrapper;\n            const parent = element.parentNode;\n            const sibling = element.nextSibling;\n            child.appendChild(element);\n            if (sibling) {\n                parent.insertBefore(child, sibling);\n            } else {\n                parent.appendChild(child);\n            }\n        });\n}\n\n// create new element (divs, spans, etc)\nexport function createElement(type, attr, text) {\n    const element = document.createElement(type);\n\n    setAttributes(element, attr);\n\n    if (text && text !== '') {\n        element.innerText = text;\n    }\n\n    return element;\n}\n\n// add attrs to div\nexport function setAttributes(element, attr) {\n    if (!attr || Object.keys(attr).length === 0) {\n        return;\n    }\n    Object.entries(attr).forEach(([key, value]) => element.setAttribute(key, value));\n}\n\n// add element after\nexport function after(element, target) {\n    target.parentNode.insertBefore(element, target.nextSibling);\n}\n\n// append element\nexport function append(type, parent, attr, text) {\n    parent.appendChild(createElement(type, attr, text));\n}\n\n// prepend element\nexport function prepend(parent, element) {\n    parent.insertBefore(element, parent.children[0]);   \n}\n\n// remove element\nexport function remove(element) {\n    if (element && element.parentNode) {\n        element.parentNode.removeChild(element);\n    }\n}\n\n// add class\nexport function addClass(element, className) {\n    element.classList.add(className);\n    return element.classList.contains(className);\n}\n\n// remove class\nexport function removeClass(element, className) {\n    element.classList.remove(className);\n    return element.classList.contains(className);\n}\n\n// if element has class\nexport function hasClass(element, className) {\n    return element.classList.contains(className);\n}\n\n// add html\nexport function html(element, html) {\n    element.innerHTML = html\n}\n\n// replace element\nexport function replaceElement(newChild, oldChild) {\n    oldChild.parentNode.replaceChild(newChild, oldChild);\n    return newChild;\n}","// useful utility functions\n\n// get a random id if needed\nexport function generateRandomId() {\n    return Math.random().toString(36).substr(2, 12);\n}\n\n// format time into seconds\nexport function timeFormat(s) {\n    let fm = [\n        Math.floor(s/60)%60,\n        Math.floor(s%60)\n    ];\n    return fm.map((v,i) => { return ( (v < 10) ? '0' : '' ) + v; }).join(':');\n}\n\n// browser specific\nexport function runPrefixMethod(obj, method) {\n    let pfx = [\"webkit\", \"moz\", \"ms\", \"o\", \"\"];\n    let p = 0, m, t;\n    while (p < pfx.length && !obj[m]) {\n      \tm = method;\n        if (pfx[p] == \"\") {\n            m = m.substr(0,1).toLowerCase() + m.substr(1);\n        }\n        m = pfx[p] + m;\n        t = typeof obj[m];\n        if (t != \"undefined\") {\n        \tpfx = [pfx[p]];\n\t\t\treturn (t == \"function\" ? obj[m]() : obj[m]);\n\t\t}\n        p++;\n    }\n}","// all this video tag related\n\nimport vimeo from './vimeo';\nimport youtube from './youtube';\nimport { wrap, createElement, append, setAttributes } from './createDivs';\nimport { generateRandomId } from './utils';\n\nconst video = {\n    // Setup media\n    init() {\n    \tconst videoTag = this._element.querySelector(\"video\");\n    \tthis._randomId = generateRandomId();\n        // if the video tag is already present\n        if (videoTag) {\n        \tthis._video.player = videoTag;\n        \tthis._video.src = videoTag.getAttribute('src');\n        \tthis._video.poster = videoTag.getAttribute('poster');\n        \tthis._video.type = videoTag.getAttribute('type');\n        \tif (!videoTag.getAttribute('id')) {\n        \t\tsetAttributes(videoTag, _id);\n        \t}\n        }\n        // if there is a video data attr\n        if (this._element.getAttribute('data-video')) {\n        \tthis._video.src = this._element.getAttribute('data-video');\n        \tthis._video.poster = this._element.getAttribute('data-poster');\n        \tthis._video.type = this._element.getAttribute('data-type');\n        \tthis._video.createTag = true;\n        }\n        if (this._settings.src !== '') {\n            // check if vimeo\n        \tthis._video.isVimeo = vimeo.isVimeo(this._settings.src);\n            // check if youtube\n        \tthis._video.isYoutube = youtube.isYoutube(this._settings.src)\n        \tif (this._video.isVimeo || this._video.isYoutube) {\n        \t\tthis._video.external = true;\n        \t} else {\n        \t\tthis._video.createTag = true;\n        \t}\n            // or if you specified the src/poster/type\n        \tthis._video.src = this._settings.src;\n        \tthis._video.poster = this._settings.poster;\n        \tthis._video.type = this._settings.src.type;\n        }\n        // if no source, stop and add error\n        if (!this._video.src) {\n        \tconsole.log('There was an error loading your video, please check documentation --> https://redtettemer.github.io/rtop-video-player/');\n        \treturn;\n        }\n        // if vimeo, load iframe\n        if (this._video.isVimeo) {\n        \tvimeo.loadVimeo();\n        }\n        // if youtube, load iframe\n        if (this._video.isYoutube) {\n        \tyoutube.loadYoutube();\n        }\n        // if need to add <video>, build it\n        if (this._video.createTag) {\n        \tvideo.createTag.call(this);\n        }\n    },\n    // build the video tag if needed\n    createTag() {\n    \tconst sourceTag = createElement('source', {src: this._video.src, type: this._video.type});\n    \tconst videoTag = createElement('video', {src: this._video.src, poster: this._video.poster, type: this._video.type, playsinline: true, id: this._randomId});\n    \tvideoTag.append(sourceTag);\n    \tthis._element.append(videoTag);\n    \tthis._video.player = videoTag;\n    }\n};\n\nexport default video;\n","// GTM stuff\n\nexport function checkTaging(tag) {\n    if (typeof(dataLayer) !== undefined) {\n      \tfor (let i in dataLayer) {\n            if (dataLayer[i].event === tag) {\n                return true\n            }\n        }\n        return false;\n    }\n    return true;\n};\n\nexport function sendTag(type, tag) {\n\tdataLayer.push({ type: tag });\n};\n","// all the click events\n\nimport { hasClass, addClass, removeClass, html, append } from '../helpers/createDivs';\nimport { timeFormat, runPrefixMethod } from '../helpers/utils';\nimport { checkTaging, sendTag } from '../helpers/GTM';\n\nconst controls = {\n\t// pause\n\tpause() {\n\t\tthis.pause();\n\t},\n\t// play\n\tplay() {\n\t\tthis.play();\n\t},\n\t// play pause or repeat if you click the video depending on current state\n\tplayPauseRepeat() {\n\t\tif (hasClass(this._playerWrapper, 'playing')) {\n\t\t\tthis.pause();\n\t\t} else if (hasClass(this._playerWrapper, 'finished')) {\n\t\t\tif (this._settings.allowReplay) {\n\t\t\t\tthis.restart();\n\t\t\t}\n\t\t} else {\n\t\t\tthis.play();\n\t\t}\n\t},\n\t// if you are moving over the video, show controls\n\tvideoMove() {\n\t\tif (this._settings.showControls) {\n        \tif (hasClass(this._playerWrapper, 'hideOverlay')){\n        \t\tif (this._timers && this._timers._motion_timer) {\n                \tclearTimeout(this._timers._motion_timer);\n                }\n                removeClass(this._playerWrapper, 'hideOverlay');\n                removeClass(this._playerWrapper.querySelector(\".vidControls\"), 'hide');\n            }\n        }\n\t},\n\t// if you scroll out of the video, hide controls\n\tvideoOut() {\n\t\tif (!this._video.player.paused && this._settings.showControls) {\n\t\t\tif (this._timers && this._timers._motion_timer) {\n            \tclearTimeout(this._timers._motion_timer);\n            }\n            if (!this._timers) {\n            \tthis._timers = {}\n            }\n            this._timers._motion_timer = setTimeout(() => {\n                addClass(this._playerWrapper, 'hideOverlay');\n                addClass(this._playerWrapper.querySelector(\".vidControls\"), 'hide');\n            }, this._settings.controlsHoverSensitivity);\n        }\n\t},\n\t// seek\n\tprogressClick(event) {\n\t\tevent.stopPropagation();\n\t\tconst pos =  event.pageX - this._controls.progressholder.element.offsetLeft - this._playerWrapper.parentNode.parentNode.offsetLeft;\n\t\tconst maxPos = this._controls.progressholder.element.offsetWidth;\n\t\tif (!this._video.player) {\n\t\t\treturn;\n\t\t}\n\t\tthis.goto((pos / maxPos) * this._video.player.duration);\n\t},\n\t// move orb with cursor\n\tprogressMove(event) {\n\t\tconst orb = this._playerWrapper.querySelector(\"#progressorb\");\n\t\tconst pos =  event.pageX - this._controls.progressholder.element.offsetLeft - this._playerWrapper.parentNode.parentNode.offsetLeft;\n\t\tconst orbPos = pos - (orb.offsetWidth / 2);\n\t\tconst maxPos = this._controls.progressholder.element.offsetWidth - (orb.offsetWidth / 2);\n\t\torb.style.left = ((orbPos > maxPos) ? maxPos : orbPos + \"px\");\n\t},\n\t// mute\n\tmute() {\n\t\tif(this._controls.isMute) {\n\t\t\tthis.adjustVolume(this._controls.volume);\n\t\t} else {\n\t\t\tthis.mute();\n\t\t}\n\t},\n\t// adjust volume\n\tadjustVolume(bar) {\n\t\tthis.adjustVolume(bar.getAttribute('data-value'));\n\t},\n\t// toggle fullscreen\n\tfullscreen() {\n\t\tif (!this._controls.isFs) {\n        \tthis._controls.isFs = true;\n        \trunPrefixMethod(this._playerWrapper, \"RequestFullScreen\");\n      \t} else {\n        \tthis._controls.isFs = false;\n        \trunPrefixMethod(document, \"CancelFullScreen\");\n      \t}\n\t},\n\t// close modal\n\tclose() {\n\t\tthis.close();\n\t},\n\t// update the scrubber/progress bar to current time\n\tupdateProgress() {\n\t\tif (!this._video.player) {\n\t\t\treturn;\n\t\t}\n\t\tif (this._settings.showTimer) {\n        \thtml(this._controls.time.current.element, timeFormat(this._video.player.currentTime));\n        \thtml(this._controls.time.total.element, timeFormat(this._video.player.duration));\n\t\t}\n\t\tif (this._settings.showScrubber) {\n\t\t\tthis._controls.buffered.element.style.width = ((this._video.player.buffered.end(this._video.player.buffered.length - 1) / this._video.player.duration) * 100) + \"%\";\n\t\t\tthis._controls.progress.element.style.width = ((this._video.player.currentTime / this._video.player.duration) * 100) + \"%\";\n\t\t}\n\t\t// if there are GTM events, try and dispatch based on time\n        if (Object.keys(this._settings.gtmOptions).length > 0) {\n            if (typeof(dataLayer) !== \"undefined\") {\n                Object.keys(this._settings.gtmOptions).map((i) => {\n                    if (Math.floor((this._video._player.currentTime / this._video._player.duration) * 100) === parseFloat(this._settings.gtmOptions[i].time)) {\n                        if (!(checkTaging(this._settings.gtmOptions[i].name))) {\n                            sendTag(this._settings.gtmOptions[i].type, name);\n                        }\n                    }\n                });\n            }\n        }\n        if(this._video.player.ended) {\n            controls.videoEnded.call(this);\n        }\n\t},\n\t// auto play\n\tautoPlay() {\n\t\tthis._playerWrapper.addClass('playing');\n\t\t// need to mute the video \n\t\tthis._video.player.muted = true;\n\t\t// mute the video fallback\n\t\tthis._video.player.volume = 0;\n        this._video.player.autoplay = true;\n        this._video.player.load();\n        \n        if (this._settings.showControls) {\n            if (this._timers && this._timers._motion_timer) {\n            \tclearTimeout(this._timers._motion_timer);\n            }\n            if (!this._timers) {\n            \tthis._timers = {}\n            }\n            this._timers._motion_timer = setTimeout(() => {\n                addClass(this._playerWrapper, 'hideOverlay');\n                addClass(this._playerWrapper.querySelector(\".vidControls\"), 'hide');\n            }, this._settings.controlsHoverSensitivity);\n        }\n\t},\n\t// open the modal\n\topenModal() {\n\t\taddClass(this._modal, 'show');\n\t},\n\t// only keyboard control is spacebar for play/pause\n\tkeyboardControls(event) {\n\t\tif (event.keyCode === 32) {\n\t\t\tevent.preventDefault();\n\t\t\tevent.stopPropagation();\n            if (hasClass(this._playerWrapper, 'playing')) {\n\t\t\t\tthis.pause();\n\t\t\t} else if (hasClass(this._playerWrapper, 'finished')) {\n\t\t\t\tif (this._settings.allowReplay) {\n\t\t\t\t\tthis.restart();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.play();\n\t\t\t}\n\t\t\treturn;\n        }\n\t},\n\t// what to do when video ends\n\tvideoEnded() {\n\t\tremoveClass(this._playerWrapper, 'playing');\n\t\tremoveClass(this._playerWrapper, 'pause');\n\t\tremoveClass(this._playerWrapper, 'hideOverlay');\n\t\taddClass(this._playerWrapper, (this._settings.closeModalOnFinish ? 'closing' : 'finished'));\n\t\taddClass(this._playerWrapper.querySelector(\".vidControls\"), 'hide');\n\t\tif (this._timers) {\n\t\t\tif (this._timers._progress) {\n\t\t\t\tclearInterval(this._timers._progress);\n\t\t\t}\n\t\t\tif (this._timers._motion_timer) {\n\t\t\t\tclearTimeout(this._timers._motion_timer);\n\t\t\t}\n\t\t}\n\t\tif (this._settings.loop) {\n\t        this.restart();\n\t    } else if (this._settings.closeModalOnFinish) {\n\t    \tconst $that = this;\n\t        setTimeout(() => {\n\t        \t$that.stop();\n\t        \tremoveClass($that._modal, 'show');\n\t        }, 300);\n\t    }\n\t}\n}\n\nexport default controls;","// build the player\n\nimport { wrap, createElement, append, addClass, prepend } from '../helpers/createDivs';\nimport playerControls from './controls';\n\nexport function buildWrapper() {\n\t// add a parent wrapper\n    const parentWrapper = createElement('div', { class: 'rtopVideoPlayerWrapper' });\n    // add a parent div that will hold everything\n    const videoHolder = createElement('div', { class: ('rtopVideoHolder' + (this._settings.fontAwesomeControlIcons ? ' hasFAIcons' : '')) });\n    // wrap the player with the holder\n    wrap(this._video.player, videoHolder);\n    // create a player wrapper just for the player and append\n    this._playerWrapper = createElement('div', { class: ('rtopVideoPlayer ' + this._settings.themeClass + (this._settings.fontAwesomeControlIcons ? ' hasFA' : ''))});\n    this._playerWrapper.append(videoHolder);\n    parentWrapper.append(this._playerWrapper);\n    // if we need a modal, build that\n    if (this._settings.playInModal) {\n    \tbuildModal.call(this, parentWrapper);\n    } else {\n    \t// attach the parent divs\n    \tthis._element.append(parentWrapper);\n    }\n}\n\nexport function buildModal(parentWrapper) {\n    if (this._settings.playInModal) {\n    \t// add the modal wrapper\n        const modal = createElement('div', { class: 'rtopVideoModal', id: (this._randomId + '_modal') });\n        // build the modal video holder\n        const holder = createElement('div', { class: 'videoModalHolder' });\n        holder.append(parentWrapper);\n        modal.append(holder);\n        // add it to the page\n        if (document.body) {\n           \tdocument.body.append(modal);\n        }\n        this._modal = modal;\n        // create a poster image as a button to launch (if vimeo or youtube, will create that from their api when appropriate)\n        if (!this._video.isVimeo && !this._video.isYoutube) {\n        \tconst poster = createElement('div', { class: ('rtopVideoPosterImage' + (this._settings.fontAwesomeControlIcons ? ' hasFAIcons' : '')) });\n        \tconst posterImage = createElement('img', { src: this._video.poster });\n        \tposter.append(posterImage);\n        }\n        // if controls arent ready yet, add them\n        if (!this._controls) {\n        \tthis._controls = {};\n        }\n        // add the poster image as a click event and store in the controls obj\n        this._controls = {\n        \tmodalPoster: {\n        \t\telement: poster,\n        \t\tevents: {\n        \t\t\tclick: poster.addEventListener('click', () => playerControls.openModal.call(this), true)\n        \t\t}\n        \t}\n        }\n        // append poster\n        this._element.append(poster);\n        // if close btn for modal, build that and add click event\n\t    if (this._settings.showCloseBtn) {\n\t    \tconst close = buildFontAwesomeButton.call(this, 'closeVideo', 'far fa-times-circle');\n\t\t\tholder.append(close);\n\t\t\tthis._controls.closeModal = {\n\t\t\t\telement: close,\n\t\t\t\tevents: {\n\t\t\t\t\tclick: close.addEventListener('click', () => playerControls.close.call(this), true)\n\t\t\t\t}\n\t\t\t};\n\t    }\n    }\n}\n\nexport function buildControls() {\n\t// add the controls wrapper\n\tconst vidControls = createElement('div', { class: ('vidControls' + (this._settings.fontAwesomeControlIcons ? ' hasFAIcons' : '')) });\n\tthis._playerWrapper.append(vidControls);\n\t// hold all the controls\n\tif (!this._controls) {\n        this._controls = {};\n    }\n    // add the video holder events (play/pause)\n\tthis._controls.video = {\n\t\telement: this._playerWrapper.querySelector(\".rtopVideoHolder\"),\n\t\tevents: { \n\t\t\tclick: this._playerWrapper.querySelector(\".rtopVideoHolder\").addEventListener('click', () => playerControls.playPauseRepeat.call(this), true), \n\t\t\tmousemove: this._playerWrapper.querySelector(\".rtopVideoHolder\").addEventListener('mousemove', () => playerControls.videoMove.call(this), true), \n\t\t\tmouseout: this._playerWrapper.querySelector(\".rtopVideoHolder\").addEventListener('mouseout', () => playerControls.videoOut.call(this), true)\n\t\t}\n\t};\n\n\t// if keyboard controls, add listener\n\tif (this._settings.keyboardControls) {\n\t\tthis._controls.keyboard = {\n\t\t\tevents: document.addEventListener('keyup', (event) => playerControls.keyboardControls.call(this, event), true)\n\t\t}\n    }\n\n\t// if showPlayPauseBtn, build\n    if (this._settings.showPlayPauseBtn) {\n       \tbuildPlayBtn.call(this);\n   \t} else {\n   \t\t// build a spacer to keep alignment\n        addClass(vidControls, 'noPP');\n    \tconst pp = createElement('div', { className: 'controlBtn', id: 'playPauseHolder' });\n       \tvideoControls.append(pp);\n    }\n\n\t// if scrubber, build\n    if (this._settings.showScrubber){\n        buildProgressBar.call(this);\n    } else {\n    \t// build a spacer to keep alignment\n    \taddClass(vidControls, 'noProgressBar');\n    \tconst spacer = createElement('div', { className: 'controlBtn', id: 'progressSpacer' });\n       \tvideoControls.append(spacer);\n    }\n\n    // if timer, build\n    if (this._settings.showTimer) {\n        buildTimer.call(this);\n    }\n\n    // if soundControl, build\n    if (this._settings.showSoundControl) {\n        buildSoundControl.call(this);\n    }\n\n   \t// if fullscreen, build\n    if (this._settings.showFullScreen) {\n        buildFullScreen.call(this);\n    }\n\n    if (this._settings.autoPlay) {\n    \tplayerControls.autoPlay.call(this);\n    }\n}\n\n// pause btn and event listener\nexport function buildPauseBtn() {\n\tconst controls = this._playerWrapper.querySelector(\".vidControls\");\n\taddClass(controls, 'hasPP');\n\tconst pp = buildFontAwesomeButton.call(this, 'playPause', 'far fa-pause-circle');\n\tprepend(controls, pp);\n\tthis._controls.pause = {\n\t\telement: pp,\n\t\tevents: {\n\t\t\tclick: pp.addEventListener('click', () => playerControls.pause.call(this), true)\n\t\t},\n\t\tinfo: {\t\n\t\t\tevent: 'pause'\n\t\t}\n\t};\n}\n\n// play btn and event listener\nexport function buildPlayBtn() {\n\tconst controls = this._playerWrapper.querySelector(\".vidControls\");\n\taddClass(controls, 'hasPP');\n\tconst pp = buildFontAwesomeButton.call(this, 'playPause', 'far fa-play-circle');\n\tprepend(controls, pp);\n\tthis._controls.play = {\n\t\telement: pp,\n\t\tevents: {\n\t\t\tclick: pp.addEventListener('click', () => playerControls.play.call(this), true)\n\t\t},\n\t\tinfo: {\t\n\t\t\tevent: 'play'\n\t\t}\n\t};\n}\n\n// progress bar/scrubber and event listeners\nexport function buildProgressBar() {\n\tconst controls = this._playerWrapper.querySelector(\".vidControls\");\n\taddClass(controls, 'hasProgressBar');\n\tconst holder = createElement('div', { class: 'controlBtn', id: 'progressholder' });\n\tthis._controls.progressholder = {\n\t\telement: holder,\n\t\tevents: {\n\t\t\tclick: holder.addEventListener('click', (event) => playerControls.progressClick.call(this, event), true),\n\t\t\tmousemove: holder.addEventListener('mousemove', (event) => playerControls.progressMove.call(this, event), true)\n\t\t}\n\t}\n\tconst fullWidth = createElement('div', { id: 'fullvideoprogress' });\n\tconst buffer = createElement('div', { id: 'buffered' });\n\tthis._controls.buffered = {\n\t\telement: buffer\n\t}\n\tconst progress = createElement('div', { id: 'progress' });\n\tthis._controls.progress = {\n\t\telement: progress\n\t}\n\tconst orb = createElement('div', { id: 'progressorb' });\n\tthis._controls.progressorb = {\n\t\telement: orb\n\t}\n\tholder.append(fullWidth);\n\tholder.append(buffer);\n\tholder.append(progress);\n\tholder.append(orb);\n\tcontrols.append(holder);\n}\n\n// timer btn and event listener\nexport function buildTimer() {\n\tconst controls = this._playerWrapper.querySelector(\".vidControls\");\n\taddClass(controls, 'hasTimer');\n\tconst holder = createElement('div', { class: 'controlBtn', id: 'timeholder' });\n\tconst current = createElement('span', { id: 'currenttime' }, '00:00');\n\tconst spacer = createElement('span', {}, ' / ');\n\tconst total = createElement('span', { id: 'totaltime' }, '00:00');\n\tholder.append(current);\n\tholder.append(spacer);\n\tholder.append(total);\n\tcontrols.append(holder);\n\tthis._controls.time = {\n\t\tcurrent: {\n\t\t\telement: current\n\t\t},\n\t\ttotal: {\n\t\t\telement: totaltime\n\t\t}\n\t};\n}\n\n// sound controls and event listeners\nexport function buildSoundControl() {\n\tconst controls = this._playerWrapper.querySelector(\".vidControls\");\n\taddClass(controls, 'hasSound');\n\tconst parent = createElement('div', { class: 'controlBtn', id: 'soundControl'});\n\tconst bars = createElement('span', { class: 'soundBars' });\n\tthis._controls.volume = 1;\n\tArray(4).fill().map((_, i) => {\n\t\tconst bar = createElement('span', { class: \"soundBar active\",  \"data-value\": (.25 * (i + 1))});\n\t\tbars.append(bar);\n\t\tthis._controls['soundBar' + i] = {\n\t\t\telement: bar,\n\t\t\tevents: {\n\t\t\t\tclick: bar.addEventListener('click', () => playerControls.adjustVolume.call(this, bar), true)\n\t\t\t}\n\t\t};\n\t});\n\tparent.append(bars);\n\tcontrols.append(parent);\n\tbuildSoundBtn.call(this);\n}\n\n\n// sound (unmute) btn and event listener\nexport function buildSoundBtn() {\n\tconst icon = createElement('span', { class: 'muteBtn' + (this._settings.fontAwesomeControlIcons ? ' FAIcon' : ' localAsset') });\n\tconst btnIcon = createElement('i', { class: 'fas fa-volume-up' });\n\tif (this._settings.fontAwesomeControlIcons) {\n\t\ticon.append(btnIcon);\n\t}\n\tthis._controls.mute = {\n\t\telement: icon,\n\t\tevents: {\n\t\t\tclick: icon.addEventListener('click', () => playerControls.mute.call(this), true)\n\t\t}\n\t}\n\tprepend(this._playerWrapper.querySelector(\"#soundControl\"), icon);\n}\n\n// mute btn and event listener\nexport function buildMuteBtn() {\n\tconst icon = createElement('span', { class: 'muteBtn isMuted' + (this._settings.fontAwesomeControlIcons ? ' FAIcon' : ' localAsset') });\n\tconst btnIcon = createElement('i', { class: 'fas fa-volume-mute' });\n\tif (this._settings.fontAwesomeControlIcons) {\n\t\ticon.append(btnIcon);\n\t}\n\tthis._controls.mute = {\n\t\telement: icon,\n\t\tevents: {\n\t\t\tclick: icon.addEventListener('click', () => playerControls.mute.call(this), true)\n\t\t}\n\t}\n\tprepend(this._playerWrapper.querySelector(\"#soundControl\"), icon);\n}\n\n// fullscreen btn and event listener\nexport function buildFullScreen() {\n\tconst controls = this._playerWrapper.querySelector(\".vidControls\");\n\taddClass(controls, 'hasFS');\n\tconst fs = buildFontAwesomeButton.call(this, 'fullScreenBtn', 'fas fa-expand');\n\tcontrols.append(fs);\n\tthis._controls.fullscreen = {\n\t\telement: fs,\n\t\tevents: {\n\t\t\tclick: fs.addEventListener('click', () => playerControls.fullscreen.call(this), true)\n\t\t}\n\t};\n}\n\n// DRY for icon btns\nexport function buildFontAwesomeButton($id, $icon) {\n\tconst btn = createElement('div', { class: \"controlBtn\", id: $id });\n\tconst icon = createElement('span', { class: (this._settings.fontAwesomeControlIcons ? 'FAIcon' : 'localAsset') });\n\tconst btnIcon = createElement('i', { class: $icon });\n\tif (this._settings.fontAwesomeControlIcons) {\n\t\ticon.append(btnIcon);\n\t}\n\tbtn.append(icon);\n\treturn btn;\n}\n","// pure javascript of jquery clone and extend\n\n// make sure it exists\nconst getConstructor = input => (input !== null && typeof input !== 'undefined' ? input.constructor : null);\n\n// jquery clone \nexport function clone(object) {\n    return JSON.parse(JSON.stringify(object));\n}\n\n// jquery extend\nexport function extend(target = {}, ...sources) {\n    if (!sources.length) {\n        return target;\n    }\n    \n    const source = sources.shift();\n\n    if (getConstructor(source) !== Object) {\n        return target;\n    }\n\n    Object.keys(source).forEach(key => {\n        if (getConstructor(source[key]) === Object) {\n            if (!Object.keys(target).includes(key)) {\n                Object.assign(target, { [key]: {} });\n            }\n\n            extend(target[key], source[key]);\n        } else {\n            Object.assign(target, { [key]: source[key] });\n        }\n    });\n\n    return extend(target, ...sources);\n}\n","// trigger a custom event to listen to \n\n// trigger custom events\nexport function trigger(element, type, info) {\n    const event = new CustomEvent(type, {\n        info: Object.assign({}, info, {\n            VideoPlayer: this\n        })\n    });\n    element.dispatchEvent(event);\n}\n\n// add the listeners for each video event\nexport function listener(element, event, callback, bool) {\n    event.split(' ').forEach(type => {\n        if (this._eventListeners && bool) {\n            this._eventListeners.push({ element, type, callback });\n        }\n        element[bool ? 'addEventListener' : 'removeEventListener'](type, () => {callback({ event: type })}, { bubbles: true });\n    });\n}\n\n// jquery on\nexport function on(element, events, callback) {\n    listener.call(this, element, events, callback, true);\n}\n\n// jquery off\nexport function off(element, events, callback) {\n    listener.call(this, element, events, callback, false);\n}\n\n// unbind everythind on destroy\nexport function unbindAll() {\n    if (this._eventListeners) {\n        this._eventListeners.forEach(item => {\n            const { element, type, callback, options } = item;\n            element.removeEventListener(type, callback, options);\n        });\n        this._eventListeners = [];\n    }\n}","/**\n * RTO+P Video Player v1.1.0\n * Copyright 2019 RTO+P https://www.rtop.com\n * Author Rob Kandel\n */\n\nimport defaults from './config/defaults';\nimport config from './config/config';\nimport video from './helpers/video';\nimport playerControls from './player/controls';\nimport { buildWrapper, buildModal, buildControls, buildPlayBtn, buildPauseBtn, buildMuteBtn, buildSoundBtn } from './player/player';\nimport { addClass, removeClass, remove } from './helpers/createDivs';\nimport { clone, extend } from './helpers/objects';\nimport { on, off, unbindAll } from './helpers/events';\n\n// create the player class\nclass VideoPlayer {\n    constructor(target, options) {\n        if (!target) {\n            // if no target, stop and send warning;\n            console.log('There was an error loading your video, please check documentation --> https://redtettemer.github.io/rtop-video-player/');\n            return;  \n        }\n\n        // keep hold of the target\n        this._element = document.querySelector(target);\n\n        // some housekeeping\n        this._name = 'RTOP_VideoPlayer';\n        this._version = config.version;\n        this._updated = config.updated;\n        \n        // create the video object to hold all video info\n        this._video = {};\n\n        // create an event listener array to hold them\n        this._eventListeners = [];\n\n        // extend settings with defaults\n        this._settings = extend(\n            {},\n            defaults,\n            VideoPlayer.settings,\n            options || {},\n        );\n        \n        // Setup video\n        video.init.call(this);\n\n        // build the wrapper everything in parent divs\n        buildWrapper.call(this);\n\n        // build some controls\n        if (this._settings.showControls) {\n            buildControls.call(this);\n        } else if (!this._settings.showControls && this._settings.autoPlay) {\n            if (!this._video.isVimeo && !this._video.isYoutube) {\n                playerControls.autoPlay.call(this);\n            }\n        }\n        // add class to remove play button and cursor\n        if (!this._settings.showControls) {\n            addClass(this._playerWrapper, 'noControls');\n        }\n        \n        // clone for destroy\n        this._original = this._element.cloneNode(true);\n    }\n\n    // public functions to control the video\n    play() {\n        // if no video, return to avoid error\n        if (!this._video.player) {\n            return;\n        }\n        // add playing class\n        addClass(this._playerWrapper, 'playing');\n\n        // remove paused class\n        removeClass(this._playerWrapper, 'paused');\n\n        // remove the play button\n        remove(this._controls.play.element);\n\n        // build pause btn and add click events\n        buildPauseBtn.call(this);\n        \n        // update progress if needed\n        if (this._settings.showControls && (this._settings.showScrubber || this._settings.showTimer)) {\n            const $that = this;\n            // if no timers exist, create obj to hold them\n            if (!this._timers) {\n                this._timers = {}\n            }\n            // set interval to check progress\n            this._timers._progress = setInterval(function(){\n                playerControls.updateProgress.call($that);\n            }, 100);\n        } \n        // if controls, start timer to hide\n        if (this._settings.showControls) {\n            // if motion timer, clear\n            if (this._timers && this._timers._motion_timer) {\n                clearTimeout(this._timers._motion_timer);\n            }\n            // if no timers exist, create obj to hold them\n            if (!this._timers) {\n                this._timers = {}\n            }\n            // create motion timer to hide the controls/overlay\n            this._timers._motion_timer = setTimeout(() => {\n                addClass(this._playerWrapper, 'hideOverlay');\n                addClass(this._playerWrapper.querySelector(\".vidControls\"), 'hide');\n            }, this._settings.controlsHoverSensitivity);\n        }\n        // actually play the video\n        return this._video.player.play();\n    }\n\n    pause() {\n        // if no video, return to avoid error\n        if (!this._video.player) {\n            return;\n        }\n        \n        // add paused class\n        addClass(this._playerWrapper, 'paused');\n        \n        // remove playing class\n        removeClass(this._playerWrapper, 'playing');\n        \n        //remove the pause btn\n        remove(this._controls.pause.element);\n\n        // add the play button and attach click events\n        buildPlayBtn.call(this);\n\n        // pause the video\n        this._video.player.pause();\n    }\n\n    stop() {\n        // if no video, return to avoid error\n        if (!this._video.player) {\n            return;\n        }\n\n        // pause the video\n        this.pause();\n\n        //  if controls, stop the progress interval and clear the motion timers\n        if (this._settings.showControls) {\n            if (this._settings.showScrubber || this._settings.showTimer) {\n                clearInterval(this._timers._progress);\n            }\n            clearTimeout(this._timers._motion_timer);\n\n            // hide the controls\n            removeClass(this._playerWrapper, 'finished');\n            removeClass(this._playerWrapper.querySelector(\".vidControls\"), 'hide');\n        }\n        // reset the player to beginning\n        this._video.player.currentTime = 0;\n    }\n\n    restart() {\n        // if no video, return to avoid error\n        if (!this._video.player) {\n            return;\n        }\n        if (this._settings.showControls) {\n            // if pause button is up, remove it\n            if (this._settings.showPlayPauseBtn) {\n                remove(this._controls.pause.element);\n            }\n            //  if controls, stop the progress interval and clear the motion timers\n            if (this._settings.showScrubber || this._settings.showTimer) {\n                clearInterval(this._timers._progress);\n            }\n            clearTimeout(this._timers._motion_timer);\n            // hide the controls\n            removeClass(this._playerWrapper, 'finished');\n            removeClass(this._playerWrapper.querySelector(\".vidControls\"), 'hide');\n        }\n        // reset the player to beginning\n        this._video.player.currentTime = 0;\n        // play the video again\n        this.play();\n    }\n\n    goto(sec) {\n        // if no video, return to avoid error\n        if (!this._video.player) {\n            return;\n        }\n        // seek video to requested time in seconds\n        this._video.player.currentTime = sec\n    }\n\n    mute() {\n        // if no video, return to avoid error\n        if (!this._video.player) {\n            return;\n        }\n        // mute video\n        this._video.player.muted = true;\n        // set our mute flag\n        this._controls.isMute = true;\n        // remove the mute btn/icon\n        remove(this._controls.mute.element);\n        // build muted btn/icon\n        buildMuteBtn.call(this);\n        // remove the active class on all the sound bars\n        Array(4).fill().map((_, i) => {        \n            removeClass(this._controls['soundBar' + i].element, 'active');\n        });\n    }\n\n    adjustVolume(val) {\n        // if no video, return to avoid error\n        if (!this._video.player) {\n            return;\n        }\n        // check to make sure request volume great than or equal to 0 and less than or equal to 1\n        let vol = (val ? val : 1);\n        const max = 1;\n        const min = 0;\n        vol = Number(vol);\n        if (vol > max) {\n            vol = max;\n        }\n        if (vol < min) {\n            vol = min;\n        }\n        // if its muted, un mute as well\n        if (this._controls.isMute) {\n            this._video.player.muted = false;\n            this._controls.isMute = false;\n            // remove the mute btn/icon\n            remove(this._controls.mute.element);\n            // build the sound btn/icon\n            buildSoundBtn.call(this);\n        }\n        // adjust the player volume\n        this._video.player.volume = vol;\n        // add active class for all the bars under the requested volume threshold, remove those above\n        Array(4).fill().map((_, i) => {\n            if (Number(this._controls['soundBar' + i].element.getAttribute('data-value')) <= vol ) {\n                addClass(this._controls['soundBar' + i].element, 'active');\n            } else {\n                removeClass(this._controls['soundBar' + i].element, 'active');\n            }\n        });\n        // hold on to current volume\n        this._controls.volume = vol;\n    }\n\n    closeModal() {\n        // stop the video on close modal\n        this.stop();\n        // remove the class showing the modal\n        removeClass(this._modal, 'show');\n    }\n\n    on(event, callback) {\n        // allow for jquery like on event listeners on the video player\n        on.call(this, this._video.player, event, callback);\n    }\n\n    off(event, callback) {\n        // allow jquery like off event listener\n        off(this._elements, event, callback);\n    }\n\n    destroy() {\n        // if no video, return to avoid error\n        if (!this._video.player) {\n            return;\n        }\n        // pause the video\n        this._video.player.pause();\n        // clear the timers\n        if (this._timers) {\n            if (this._settings.showControls && (this._settings.showScrubber || this._settings.showTimer)) {\n                clearInterval(this._timers._progress);\n            }\n            if (this._settings.showControls) {\n                clearTimeout(this._timers._motion_timer);\n            }\n        }\n        // unbind all events\n        unbindAll.call(this);\n        // remove the Video Player items\n        remove(document.querySelector('.rtopVideoPlayerWrapper'));\n        // if the video tag was already there, add it back in\n        if (!this._video.createTag) {\n            video.createTag.call(this);\n        }\n    }\n}\n\nVideoPlayer.settings = clone(defaults);\n\nexport default VideoPlayer;\n\n// 4) add vimeo\n// 5) add youtube\n// 6) SSR, maybe export the class then;"]}